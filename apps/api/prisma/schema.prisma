// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  id          String   @id @default(uuid())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  createdBy   String?
  updatedAt   DateTime @updatedAt
  updatedBy   String?
}

model User {
  id        String     @id @default(uuid())
  username  String
  name      String
  password  String
  createdAt DateTime   @default(now())
  createdBy String?
  updatedAt DateTime   @updatedAt
  updatedBy String?
  roles     UserRole[]
}

model UserRole {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  createdBy String

  @@id([userId, roleId])
}

model Role {
  id          String           @id @default(uuid())
  code        String
  name        String
  createdAt   DateTime         @default(now())
  createdBy   String?
  updatedAt   DateTime         @updatedAt
  updatedBy   String?
  users       UserRole[]
  permissions RolePermission[]
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String
  createdAt    DateTime   @default(now())
  createdBy    String

  @@id([permissionId, roleId])
}

model Permission {
  id          String           @id @default(uuid())
  parentId    String?
  type        Int
  name        String
  url         String?
  description String?
  createdAt   DateTime         @default(now())
  createdBy   String?
  updatedAt   DateTime         @updatedAt
  updatedBy   String?
  roles       RolePermission[]
}
